// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_HH_
#define _myproject_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "dense_latency_ap_fixed_ap_fixed_config2_0_0.h"
#include "linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config3_s.h"

namespace ap_rtl {

struct myproject : public sc_module {
    // Port declarations 14
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > fc1_input_V;
    sc_in< sc_logic > fc1_input_V_ap_vld;
    sc_out< sc_lv<16> > layer3_out_0_V;
    sc_out< sc_logic > layer3_out_0_V_ap_vld;
    sc_out< sc_lv<16> > const_size_in_1;
    sc_out< sc_logic > const_size_in_1_ap_vld;
    sc_out< sc_lv<16> > const_size_out_1;
    sc_out< sc_logic > const_size_out_1_ap_vld;


    // Module declarations
    myproject(sc_module_name name);
    SC_HAS_PROCESS(myproject);

    ~myproject();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    dense_latency_ap_fixed_ap_fixed_config2_0_0* layer2_out_0_V_dense_latency_ap_fixed_ap_fixed_config2_0_0_fu_69;
    linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config3_s* call_ret6_linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config3_s_fu_75;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<16> > fc1_input_V_preg;
    sc_signal< sc_lv<16> > fc1_input_V_in_sig;
    sc_signal< sc_logic > fc1_input_V_ap_vld_preg;
    sc_signal< sc_logic > fc1_input_V_ap_vld_in_sig;
    sc_signal< sc_logic > fc1_input_V_blk_n;
    sc_signal< sc_logic > layer2_out_0_V_dense_latency_ap_fixed_ap_fixed_config2_0_0_fu_69_ap_ready;
    sc_signal< sc_lv<15> > layer2_out_0_V_dense_latency_ap_fixed_ap_fixed_config2_0_0_fu_69_ap_return;
    sc_signal< sc_logic > call_ret6_linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config3_s_fu_75_ap_ready;
    sc_signal< sc_lv<15> > call_ret6_linear_ap_fixed_ap_fixed_16_6_0_0_0_linear_config3_s_fu_75_ap_return;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_lv<16> ap_const_lv16_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_const_size_in_1();
    void thread_const_size_in_1_ap_vld();
    void thread_const_size_out_1();
    void thread_const_size_out_1_ap_vld();
    void thread_fc1_input_V_ap_vld_in_sig();
    void thread_fc1_input_V_blk_n();
    void thread_fc1_input_V_in_sig();
    void thread_layer3_out_0_V();
    void thread_layer3_out_0_V_ap_vld();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
